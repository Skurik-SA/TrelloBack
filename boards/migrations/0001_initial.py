# Generated by Django 5.0 on 2023-12-28 17:38

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_private', models.BooleanField(blank=True, default=True, null=True)),
                ('is_favourite', models.BooleanField(blank=True, default=False, null=True)),
                ('users_can_edit', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('users_can_view', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('users_can_comment', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardArchive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cards_archived_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('font_color', models.CharField(default='#000')),
                ('color', models.CharField(blank=True, null=True)),
                ('mark_text', models.CharField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubTasks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, default='', null=True)),
                ('success_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('total_amount', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.IntegerField(blank=True, null=True, unique=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, null=True)),
                ('card_marks', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, null=True), blank=True, null=True, size=None)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('is_notifications', models.BooleanField(blank=True, default=False, null=True)),
                ('is_archived', models.BooleanField(blank=True, default=False, null=True)),
                ('color', models.CharField(blank=True, null=True)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='boards.column')),
            ],
        ),
    ]
